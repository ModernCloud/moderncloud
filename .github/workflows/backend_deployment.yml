name: Backend Deployment

on:
  workflow_dispatch:
    inputs:
      version:
        description: Version
        required: true
        default: main

env:
  SSH_KEY: ${{ secrets.BACKEND_SSH_KEY }}
  SSH_USER: ${{ secrets.BACKEND_SSH_USER }}
  SSH_HOST: ${{ secrets.BACKEND_SSH_HOST }}
  BASE_DIR: ${{ secrets.BACKEND_BASE_DIR }}
  RELEASE_DIR: ${{ secrets.BACKEND_BASE_DIR }}/releases/${{ github.event.inputs.version }}

defaults:
  run:
    shell: bash

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/deployment.key
          chmod 600 ~/.ssh/deployment.key
          cat >>~/.ssh/config <<END
          Host deployment
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/deployment.key
            StrictHostKeyChecking no
          END
      - name: Create directories
        run: |
          ssh deployment mkdir -p $RELEASE_DIR
          ssh deployment mkdir -p $BASE_DIR/storage/logs
      - name: Copy files
        run: scp -r -F ~/.ssh/config -i ~/.ssh/deployment.key -o StrictHostKeyChecking=no ${{ github.workspace }}/* ${SSH_USER}@${SSH_HOST}:$RELEASE_DIR
      - name: Install dependencies
        run: ssh deployment npm install --no-fund --no-audit --prod --no-optional --prefix $RELEASE_DIR
      - name: Create symbolic links
        run: ssh deployment ln -sf $BASE_DIR/.env $RELEASE_DIR/.env
      - name: Activate release
        run: |
          ssh deployment rm -f $BASE_DIR/latest
          ssh deployment ln -sf $RELEASE_DIR $BASE_DIR/latest
          ssh deployment pm2 startOrReload $BASE_DIR/ecosystem.json
      - name: Clean old release folders
        run: ssh deployment find $BASE_DIR/releases/ -maxdepth 1 ! -wholename $BASE_DIR/releases/ ! -wholename $RELEASE_DIR -type d -exec rm -r "{}" +